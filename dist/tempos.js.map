{"version":3,"file":"tempos.js","sources":["../src/tool/oneobj.js","../src/tool/type.js","../src/config.js","../src/tool/cache.js","../src/tool/loader.js","../src/compile/compiler.js","../src/tool/log.js","../src/filter/escape.js","../src/filter/upper.js","../src/filter/trim.js","../src/filter/lower.js","../src/filter/defaults.js","../src/filter/join.js","../src/filter/size.js","../src/filter/replace.js","../src/filter/eq.js","../src/filter/truncate.js","../src/compile/index.js","../src/compile/render.js","../src/index.js"],"sourcesContent":["module.exports = function(source) {\r\n    const obj = {};\r\n    source.replace(/([$_\\w]+)/g, function(word) {\r\n        obj[word] = true;\r\n    });\r\n    return obj;\r\n};","const oneobj = require('./oneobj');\r\nconst DATA_TYPE_ARR = oneobj('Boolean Number String Function Array Object RegExp Set Map process');\r\n\r\nfor( let key in DATA_TYPE_ARR ) {\r\n    DATA_TYPE_ARR['[object ' + key + ']'] = key.toLowerCase();\r\n}\r\n\r\nmodule.exports = {\r\n    check: function(obj, type) {\r\n        var types = null == obj ? '' + obj : DATA_TYPE_ARR[ Object.prototype.toString.call(obj) ] || 'object';\r\n        return void 0 !== type ? type === types : types;\r\n    }\r\n};","const oneobj = require('./tool/oneobj');\r\nconst Type = require('./tool/type');\r\n\r\nconst config = {\r\n    debug: true,\r\n\r\n    cache: true,\r\n\r\n    startTag: '{{',\r\n\r\n    endTag: '}}',\r\n\r\n    extname: '.temp',\r\n\r\n    filepath: null,\r\n\r\n    isNode: (function() {\r\n        let flag = false;\r\n        try{\r\n            flag = global && Type.check(global.process, 'process');\r\n        } catch (e){//\r\n        }\r\n        return flag;\r\n    })(),\r\n\r\n    ignore: (function() {\r\n        const KEYS = '$__data__ $__filter__ $__out__ '+\r\n            'do if for let new try var case else with await break true false '+\r\n            'catch class const super throw while yield delete export import return switch default '+\r\n            'extends finally continue debugger function arguments instanceof typeof catch void this in try';\r\n\r\n        return oneobj(KEYS);\r\n    })()\r\n};\r\nmodule.exports = config;","const config = require('../config');\r\n\r\nclass Caches {\r\n    constructor() {\r\n        this._data = Object.create(null);\r\n    }\r\n    get(key) {\r\n        return config.cache ? this._data[key] : null;\r\n    }\r\n\r\n    set(key, val) {\r\n        if( config.cache ) {\r\n            this._data[key] = val;\r\n        }\r\n    }\r\n\r\n    detail(key, callback) {\r\n        let self = this, ret;\r\n        if( !(ret = self.get(key)) ) {\r\n            self.set(key, ret = callback());\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nmodule.exports = Caches;","const config = require('../config');\r\nconst Cache = require('./cache');\r\nconst fileCache = new Cache();\r\n\r\nconst loader = (source, obj) => {\r\n    let ret = '';\r\n    if( config.isNode ) {\r\n        const fs = require('fs');\r\n        const path = require('path');\r\n        source = path.resolve( path.dirname(config.filepath), source );\r\n        if( !path.extname( source) ) {\r\n            source += config.extname;\r\n        }\r\n        if( obj ) {\r\n            obj.fnName = path.basename(source, config.extname);\r\n        }\r\n        ret = fileCache.detail(source, () => {\r\n            return fs.readFileSync(source, 'utf8');\r\n        });\r\n    }\r\n    else {\r\n        const el = document.querySelector(source);\r\n        if( el ) {\r\n            ret = el.value || el.innerHTML;\r\n        }\r\n    }\r\n    return ret;\r\n};\r\nmodule.exports = loader;","const Cache = require('../tool/cache');\r\nconst config= require('../config');\r\nconst loader= require('../tool/loader');\r\n\r\nconst fnCache = new Cache();\r\nconst expCache = new Cache();\r\nconst tokenCache = new Cache();\r\nconst strCache = new Cache();\r\nconst rQACache = new Cache();\r\nconst filterCache = new Cache();\r\nconst fnBodyCache = new Cache();\r\n\r\nconst DATA = '$__data__';\r\nconst OUT = '$__out__';\r\nconst FILTER = '$__filter__';\r\nconst RDEF_EXP = /#def\\.([$_a-zA-Z](?:\\w+)?)/;\r\nconst RUSE_EXP = /#use\\.([$_a-zA-Z](?:\\w+)?)/;\r\nconst RINCLUDE_EXP = /(include\\s+(?:\\'|\\\")([^\\'\\\"]+)(?:\\'|\\\")(?:\\s+)?)([\\w\\W]+)?/; // eslint-disable-line\r\nconst RVCODE = /[\\w_$]/;\r\nconst RVAR_PREFIX = /^[a-zA-Z_$]/;\r\n\r\nconst createFnBody = (self) => {\r\n    return fnBodyCache.detail(self.template, () => {\r\n        let key;\r\n        let fnbody = '';\r\n        let subs = '';\r\n        let vars = `var ${OUT} = '',${FILTER}=this`;\r\n        \r\n        // Add variable\r\n        for( key in self.vars ) {\r\n            vars += `,${key}=${DATA}.${key}`;\r\n        }\r\n        vars += ';\\n';\r\n    \r\n        self.tokens.forEach(function(tok) {\r\n            const flag = tok.def || tok.use || tok.include;\r\n    \r\n            if( tok.def || tok.include ) {\r\n                subs += `var ${tok.fnName}=function(${DATA}) {\\n` + createFnBody(tok.compile) + '};\\n';\r\n            }\r\n            if( tok.use || tok.include ) {\r\n                fnbody += `${OUT} += ${tok.fnName}.call(${FILTER}, ${tok.params || DATA});\\n`;\r\n            }\r\n            else if( !flag && false === tok.out ) {\r\n                fnbody += `${tok.source}\\n`;\r\n            }\r\n            else if( !flag ) {\r\n                fnbody += `${OUT} += ` + (tok.out ? addFilters(tok) : `'${tok.source}'`) + ';\\n';\r\n            }\r\n        });\r\n        fnbody += `return ${OUT};\\n`;\r\n        return vars + subs + fnbody;\r\n    });\r\n};\r\n\r\nconst getTokenAndVars = (self) => {\r\n    const cnt = self.template;\r\n    return tokenCache.detail(cnt, () => {\r\n        let start = 0, end, ret = {\r\n            token: [],\r\n            vars: {}\r\n        };\r\n        while( -1 !== (end = cnt.indexOf(config.startTag, start)) ) {\r\n            if( end > start ) {\r\n                ret.token.push({\r\n                    source: replaceQuotesAndEnter( cnt.substring(start, end) )\r\n                });\r\n            }\r\n            start = parseExpression(self, ret.token, ret.vars, end + config.endTag.length);\r\n        }\r\n\r\n        if( start < self.template.length ) {\r\n            ret.token.push({\r\n                source: replaceQuotesAndEnter( cnt.substring(start) )\r\n            });\r\n        }\r\n\r\n        self.tokens = ret.token;\r\n        self.vars = ret.vars;\r\n        return ret;\r\n    });\r\n};\r\n\r\nconst replaceQuotesAndEnter = (str) => {\r\n    return rQACache.detail(str, () => {\r\n        let prev, c, s, res='', i=-1, len=str.length;\r\n        while( i++ < len ) {\r\n            prev = c;\r\n            c = str.charCodeAt(i);\r\n            s = str.charAt(i);\r\n            switch(c) {\r\n            case 0x27:\r\n            case 0x22:\r\n                res += (prev !== 0x5C ? '\\\\' : '') + s;\r\n                break;\r\n            case 0x0d:\r\n                res += '\\\\r';\r\n                break;\r\n            case 0x0a:\r\n                res += '\\\\n';\r\n                break;\r\n            default:\r\n                res += s;\r\n            }\r\n        }\r\n        return res;\r\n    });\r\n};\r\n\r\nconst parseExpression = (self, token, vars, start) => {\r\n    const cnt = self.template;\r\n    \r\n    const res = expCache.detail(cnt+start, () => {\r\n        let ret, exps, end, sdiff = 0, ediff = 0;\r\n\r\n        end = cnt.indexOf(config.endTag, start);\r\n        exps = cnt.substring(start, end).trim();\r\n        const tmp = {\r\n            out: false,\r\n            escape: false\r\n        };\r\n    \r\n        // {{#def ... #}}\r\n        if( (ret = exps.match(RDEF_EXP)) ) {\r\n            tmp.def = true;\r\n            tmp.fnName = ret[1];\r\n            sdiff = ret[0].length;\r\n            end = cnt.indexOf('#'+config.endTag, start);\r\n            ediff = 1;\r\n        }\r\n        // {{#use ... }}\r\n        else if( (ret = exps.match(RUSE_EXP)) ) {\r\n            tmp.use = true;\r\n            tmp.fnName = ret[1];\r\n            sdiff = ret[0].length;\r\n        }\r\n        else if( (ret = exps.match(RINCLUDE_EXP)) ) {\r\n            tmp.include = true;\r\n            tmp.path = ret[2];\r\n            tmp.params = ret[3];\r\n            sdiff = ret[1].length;\r\n        }\r\n        else {\r\n            switch( exps.charCodeAt(0) ) {\r\n            case 0x3d: // =\r\n                sdiff = 1;\r\n                tmp.escape = true;\r\n                tmp.out = true;\r\n                break;\r\n            case 0x2d: // -\r\n                sdiff = 1;\r\n                tmp.out = true;\r\n                break;\r\n            }\r\n        }\r\n        exps = cnt.substring(start+sdiff, end);\r\n        \r\n        if( tmp.def ) {\r\n            tmp.source = exps;\r\n            tmp.compile = new Compiler({\r\n                template: exps\r\n            });\r\n        }\r\n        else if( tmp.use ) {\r\n            tmp.params = exps;\r\n        }\r\n        else if( tmp.include ) {\r\n            tmp.source = loader(tmp.path, tmp);\r\n            tmp.compile = new Compiler({\r\n                template: tmp.source\r\n            });\r\n        }\r\n        else {\r\n            ret = addvars(exps, vars);\r\n            tmp.source = ret.source;\r\n            tmp.filter = ret.filter;\r\n        }\r\n\r\n        // 添加变量\r\n        if( (tmp.use || tmp.include) && tmp.params ) {\r\n            addvars(tmp.params, vars);\r\n        }\r\n    \r\n        token.push(tmp);\r\n        return {\r\n            end: end,\r\n            ediff: ediff\r\n        };\r\n    });\r\n    return res.end + config.endTag.length + res.ediff;\r\n};\r\n\r\nconst parseStr =  (source) => {\r\n    const cnt = source.trim();\r\n    return strCache.detail(cnt, () => {    \r\n        const len = cnt.length;\r\n        let c, s, prev, curF;\r\n        let i = -1;\r\n        let vars = '';\r\n        let exps = '';\r\n        let fts = '';\r\n        let varObj = {};\r\n        let filter = {};\r\n        let inF = false;\r\n        let inS = false;\r\n        let newF = false;\r\n        \r\n        while( i++ < len ) {\r\n            prev = c;\r\n            c = cnt.charCodeAt(i);\r\n            s = cnt.charAt(i);\r\n            //\r\n            if( (c === 0x27 || c === 0x22) && prev !== 0x5C ) { //0x27:' 0x22:\" 0x5C:\\\r\n                inS = !inS;\r\n            }\r\n            else if(!inS && c === 0x7C && prev !== 0x7C && cnt.charCodeAt(i+1) !== 0x7C) { // |\r\n                newF = inF = true;\r\n            }\r\n            if( inF && (!inS && c===0x20 || i===len ) ) {\r\n                fts = fts.trim();\r\n                if( fts.charCodeAt(0) === 0x7C ) {\r\n                    newF = true;\r\n                }\r\n                else if( newF ) {\r\n                    filter[ curF = fts ] = [];\r\n                    newF = false;\r\n                }\r\n                else {\r\n                    filter[curF].push(fts);\r\n                }\r\n                fts = '';\r\n            }\r\n            else if( inF ) {\r\n                fts += s;\r\n            }\r\n            if( !RVCODE.test(s) ) {\r\n                vars = vars.trim();\r\n                RVAR_PREFIX.test(vars) && !filter[vars] ? varObj[vars] = true : null;\r\n                vars = '';\r\n            }\r\n            // Variable\r\n            if( !inS ) { vars += s; }\r\n            // Expression\r\n            if( !inF ) { exps += s; }\r\n        }\r\n    \r\n        return {\r\n            source: exps.trim(),\r\n            vars: varObj,\r\n            filter: filter\r\n        };\r\n    });\r\n};\r\n\r\nconst addvars = (str, vars) => {\r\n    let ret = parseStr( str.trim() );\r\n    for( let key in ret.vars ) {\r\n        !config.ignore[key] ? vars[key] = true : null;\r\n    }\r\n    return ret;\r\n};\r\n\r\nconst addFilters = (tok) => {\r\n    return filterCache.detail(JSON.stringify(tok), ()=>{\r\n        let filters = tok.escape ? `${FILTER}.escape(` + tok.source + ')' : tok.source;\r\n\r\n        for(let key in tok.filter) {\r\n            if( tok.escape && key === 'escape' ) continue;\r\n            \r\n            let params = ')';\r\n            if( tok.filter[key].length ) {\r\n                params = ',' + tok.filter[key].join(',')+')';\r\n            }\r\n            filters = `${FILTER}.${key}(${filters}` + params;\r\n        }\r\n        return filters;\r\n    });\r\n};\r\n\r\nclass Compiler {\r\n    constructor(option) {\r\n        this.template = option.template;\r\n        this.tokens = null;\r\n        this.vars = {};\r\n        getTokenAndVars(this);\r\n    }\r\n\r\n    build() {\r\n        const self = this;\r\n        return fnCache.detail(self.template, ()=>{\r\n            return new Function(DATA, createFnBody(self));\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = Compiler;","const config = require('../config');\r\nconst Type = require('../tool/type');\r\n\r\nconst print = (msg) => {\r\n    /* eslint-disable */\r\n    if( config.debug && console && console.log ) {\r\n        console.log(msg);\r\n    }\r\n    /* eslint-enable */\r\n};\r\n\r\nconst checkType = (name, data, type) => {\r\n    if( config.debug && !Type.check(data, type) ) {\r\n        throw new TypeError(name + ' Parameter type must be ' + type + '.');\r\n    }\r\n};\r\nmodule.exports = {\r\n    print: print,\r\n    checkType: checkType\r\n};","const Cache = require('../tool/cache');\r\nconst esCache = new Cache();\r\nconst rRep = /[<>\\\"\\'&]/g; // eslint-disable-line\r\n\r\nlet robj = {};\r\n['&','<','>','\"',\"'\"].forEach(function(it) { // eslint-disable-line\r\n    const code = it.charCodeAt(0);\r\n    robj[ code ] = '&#'+code+';';\r\n});\r\n\r\nconst escape = (data) => {\r\n    return esCache.detail(data, ()=>{\r\n        return rRep.test(data) ? data.replace(rRep, function(it) {\r\n            return robj[ it.charCodeAt(0) ] || it;\r\n        }) : data;\r\n    });\r\n};\r\n\r\nmodule.exports = escape;","const log = require('../tool/log');\r\n\r\nconst upper = (data, flag) => {\r\n    log.checkType('Filter:upper()', data, 'string');\r\n\r\n    let ret;\r\n    switch(flag) {\r\n    case true:\r\n        ret = data.replace(/\\b[a-z]\\w*\\b/g, function(word) {\r\n            return word.substr(0,1).toUpperCase() + word.substr(1);\r\n        });\r\n        break;\r\n    default:\r\n        ret = data.toUpperCase();\r\n    }\r\n    return ret || data;\r\n};\r\n\r\nmodule.exports = upper;","const log = require('../tool/log');\r\n\r\nconst trim = (data) => {\r\n    log.checkType('Filter:trim()', data, 'string');\r\n\r\n    return String.prototype.trim.call(data);\r\n};\r\n\r\nmodule.exports = trim;","const log = require('../tool/log');\r\n\r\nconst lower = (data) => {\r\n    log.checkType('Filter:lower()', data, 'string');\r\n\r\n    return data.toLowerCase();\r\n};\r\n\r\nmodule.exports = lower;","const defaults = (data, dstr = '') => {\r\n    return void 0 === data || null === data ? dstr : data;\r\n};\r\n\r\nmodule.exports = defaults;","const log = require('../tool/log');\r\n\r\nconst join = (data, connector = ',') => {\r\n    log.checkType('Filter:join()', data, 'array');\r\n\r\n    return data.join(connector);\r\n};\r\n\r\nmodule.exports = join;","const size = (data) => {\r\n    let size = data && data.length;\r\n    if( !size && typeof size === 'object' ) {\r\n        size = 0;\r\n        for( let key in data ) { // eslint-disable-line\r\n            size ++;\r\n        }\r\n    }\r\n    return size || 0;\r\n};\r\n\r\nmodule.exports = size;","const log = require('../tool/log');\r\n\r\nconst replace = (data, older, newer) => {\r\n    log.checkType('Filter:replace()', data, 'string');\r\n\r\n    return data.replace(older, newer);\r\n};\r\n\r\nmodule.exports = replace;","const Type = require('../tool/type');\r\n\r\nconst eq = (data, index = 0) => {\r\n    let ret;\r\n    let isObj = Type.check(data, 'object');\r\n    if( !(Type.check(data, 'array') || isObj || Type.check(data, 'string')) ) {\r\n        return ret;\r\n    }\r\n    if( 'last' === index ) {\r\n        if( isObj ) {\r\n            for( let key in data ) {\r\n                ret = data[key];\r\n            }\r\n        }\r\n        else {\r\n            ret = data[ data.length-1 ];\r\n        }\r\n    }\r\n    else {\r\n        ret = data[index];\r\n    }\r\n    return ret;\r\n};\r\n\r\nmodule.exports = eq;","const log = require('../tool/log');\r\n\r\nconst truncate = (data, length=255, end='...') => {\r\n    log.checkType('Filter:truncate()', data, 'string');\r\n\r\n    return data.length > length ? data.substr(0, length) + end : data;\r\n};\r\n\r\nmodule.exports = truncate;","const Compiler = require('./compiler');\r\nconst Cache = require('../tool/cache');\r\nconst config = require('../config');\r\nconst loader = require('../tool/loader');\r\nconst filter= require('../filter/index');\r\nconst Type = require('../tool/type');\r\n\r\nconst fnCache = new Cache();\r\n\r\nconst compile = (source, option = {}) => {\r\n    const types = Type.check(source);\r\n    \r\n    if( 'object' === types ) {\r\n        option = source;\r\n    }\r\n    else if( 'string' === types ) {\r\n        config.filepath = source;\r\n        option.template = loader(source);\r\n    }\r\n    option.template = option.template.trim();\r\n    return fnCache.detail(option.template, () => {\r\n        return new Compiler(option).build().bind(filter);\r\n    });\r\n};\r\n\r\nmodule.exports = compile;","const compile = require('./index');\r\n\r\nconst render = (content, data, option) => {\r\n    return compile(content, option)(data);\r\n};\r\nmodule.exports = render;","const config = require('./config');\r\nconst render = require('./compile/render');\r\nconst compile = require('./compile/index');\r\nconst filter = require('./filter/index');\r\nconst cache = require('./tool/cache');\r\n\r\nconst Blast = (content, data, option) => {\r\n    return render(content, data, option);\r\n};\r\n\r\nBlast.render = render;\r\nBlast.compile = compile;\r\nBlast.Config = config;\r\nBlast.Filter = filter;\r\nBlast.Cache = cache;\r\n\r\nmodule.exports = Blast;"],"names":["source","obj","replace","word","DATA_TYPE_ARR","oneobj","key","toLowerCase","type","types","Object","prototype","toString","call","flag","global","Type","check","process","e","_data","create","config","cache","this","val","callback","self","ret","get","set","fileCache","Cache","isNode","fs","require$$0","path","require$$1","resolve","dirname","filepath","extname","fnName","basename","detail","readFileSync","el","document","querySelector","value","innerHTML","fnCache","expCache","tokenCache","strCache","rQACache","filterCache","fnBodyCache","DATA","OUT","FILTER","RDEF_EXP","RUSE_EXP","RINCLUDE_EXP","RVCODE","RVAR_PREFIX","createFnBody","template","fnbody","subs","vars","tokens","forEach","tok","def","use","include","compile","params","out","addFilters","getTokenAndVars","cnt","start","end","indexOf","startTag","token","push","replaceQuotesAndEnter","substring","parseExpression","endTag","length","str","prev","c","s","res","i","len","charCodeAt","charAt","exps","sdiff","ediff","tmp","trim","match","escape","Compiler","loader","addvars","filter","parseStr","curF","fts","varObj","inF","inS","newF","test","ignore","JSON","stringify","filters","join","option","Function","msg","debug","console","log","name","data","TypeError","esCache","rRep","robj","it","code","checkType","substr","toUpperCase","String","dstr","connector","size","older","newer","index","isObj","build","bind","content","Blast","render","Config","Filter"],"mappings":"oYAAA,MAAiB,SAASA,OAChBC,cACCC,QAAQ,aAAc,SAASC,KAC9BA,IAAQ,IAETF,GCJLG,EAAgBC,EAAO,sEAE7B,IAAK,IAAIC,KAAOF,IACE,WAAaE,EAAM,KAAOA,EAAIC,cAGhD,aACW,SAASN,EAAKO,OACbC,EAAQ,MAAQR,EAAM,GAAKA,EAAMG,EAAeM,OAAOC,UAAUC,SAASC,KAAKZ,KAAU,qBACtF,IAAWO,EAAOA,IAASC,EAAQA,cCNvC,SAEA,WAEG,YAEF,aAEC,iBAEC,YAED,eACDK,GAAO,QAEAC,QAAUC,EAAKC,MAAMF,OAAOG,QAAS,WAC9C,MAAOC,WAEFL,EANF,UAeET,EALM,+1BCtBRe,MAAQV,OAAOW,OAAO,4CAE3Bf,UACOgB,EAAOC,MAAQC,KAAKJ,MAAMd,GAAO,iCAGxCA,EAAKmB,GACDH,EAAOC,aACFH,MAAMd,GAAOmB,kCAInBnB,EAAKoB,OACJC,EAAOH,KAAMI,gBACXA,EAAMD,EAAKE,IAAIvB,OACZwB,IAAIxB,EAAKsB,EAAMF,KAEjBE,+BCnBTG,EAAY,IAAIC,YAEP,SAAChC,EAAQC,OAChB2B,EAAM,MACNN,EAAOW,OAAS,KACVC,EAAKC,EACLC,EAAOC,IACJD,EAAKE,QAASF,EAAKG,QAAQjB,EAAOkB,UAAWxC,GACjDoC,EAAKK,QAASzC,QACLsB,EAAOmB,SAEjBxC,MACIyC,OAASN,EAAKO,SAAS3C,EAAQsB,EAAOmB,YAExCV,EAAUa,OAAO5C,EAAQ,kBACpBkC,EAAGW,aAAa7C,EAAQ,cAGlC,KACK8C,EAAKC,SAASC,cAAchD,GAC9B8C,MACMA,EAAGG,OAASH,EAAGI,kBAGtBtB,yBCtBLuB,EAAU,IAAInB,EACdoB,EAAW,IAAIpB,EACfqB,EAAa,IAAIrB,EACjBsB,EAAW,IAAItB,EACfuB,EAAW,IAAIvB,EACfwB,EAAc,IAAIxB,EAClByB,EAAc,IAAIzB,EAElB0B,EAAO,YACPC,EAAM,WACNC,EAAS,cACTC,EAAW,6BACXC,EAAW,6BACXC,EAAe,6DACfC,EAAS,SACTC,EAAc,cAEdC,EAAe,SAAfA,EAAgBvC,UACX8B,EAAYb,OAAOjB,EAAKwC,SAAU,eACjC7D,SACA8D,EAAS,GACTC,EAAO,GACPC,SAAcX,WAAYC,cAGzBtD,KAAOqB,EAAK2C,YACDhE,MAAOoD,MAAQpD,YAEvB,QAEHiE,OAAOC,QAAQ,SAASC,OACnB3D,EAAO2D,EAAIC,KAAOD,EAAIE,KAAOF,EAAIG,SAEnCH,EAAIC,KAAOD,EAAIG,cACP,OAAOH,EAAI/B,oBAAmBgB,UAAcQ,EAAaO,EAAII,SAAW,QAEhFJ,EAAIE,KAAOF,EAAIG,WACFjB,SAAUc,EAAI/B,gBAAekB,QAAWa,EAAIK,QAAUpB,UAE7D5C,IAAQ,IAAU2D,EAAIM,IAGtBjE,OACO6C,UAAac,EAAIM,IAAMC,EAAWP,OAAWA,EAAIzE,YAAa,UAH9DyE,EAAIzE,2BAML2D,QACbW,EAAOD,EAAOD,KAIvBa,EAAkB,SAACtD,OACfuD,EAAMvD,EAAKwC,gBACVd,EAAWT,OAAOsC,EAAK,mBACtBC,EAAQ,EAAGC,SAAKxD,sBAIZ,KAAOwD,EAAMF,EAAIG,QAAQ/D,EAAOgE,SAAUH,KAC1CC,EAAMD,KACFI,MAAMC,aACEC,EAAuBP,EAAIQ,UAAUP,EAAOC,QAGpDO,EAAgBhE,EAAMC,EAAI2D,MAAO3D,EAAI0C,KAAMc,EAAM9D,EAAOsE,OAAOC,eAGvEV,EAAQxD,EAAKwC,SAAS0B,UAClBN,MAAMC,aACEC,EAAuBP,EAAIQ,UAAUP,QAIhDZ,OAAS3C,EAAI2D,QACbjB,KAAO1C,EAAI0C,KACT1C,KAIT6D,EAAwB,SAACK,UACpBvC,EAASX,OAAOkD,EAAK,mBACpBC,SAAMC,SAAGC,SAAGC,EAAI,GAAIC,GAAG,EAAGC,EAAIN,EAAID,OAC/BM,IAAMC,YACFJ,IACHF,EAAIO,WAAWF,KACfL,EAAIQ,OAAOH,GACRH,QACF,QACA,OACgB,KAATD,EAAgB,KAAO,IAAME,aAEpC,MACM,iBAEN,MACM,uBAGAA,SAGRC,KAITP,EAAkB,SAAChE,EAAM4D,EAAOjB,EAAMa,OAClCD,EAAMvD,EAAKwC,SAEX+B,EAAM9C,EAASR,OAAOsC,EAAIC,EAAO,eAC/BvD,SAAK2E,SAAMnB,SAAKoB,EAAQ,EAAGC,EAAQ,IAEjCvB,EAAIG,QAAQ/D,EAAOsE,OAAQT,OAE3BuB,QACG,UACG,MAIP9E,KAPEsD,EAAIQ,UAAUP,EAAOC,GAAKuB,QAOjBC,MAAM/C,KACda,KAAM,IACNhC,OAASd,EAAI,KACTA,EAAI,GAAGiE,SACTX,EAAIG,QAAQ,IAAI/D,EAAOsE,OAAQT,KAC7B,OAGP,GAAKvD,EAAM2E,EAAKK,MAAM9C,KACnBa,KAAM,IACNjC,OAASd,EAAI,KACTA,EAAI,GAAGiE,YAEd,GAAKjE,EAAM2E,EAAKK,MAAM7C,KACnBa,SAAU,IACVxC,KAAOR,EAAI,KACXkD,OAASlD,EAAI,KACTA,EAAI,GAAGiE,mBAGPU,EAAKF,WAAW,SACnB,KACO,IACJQ,QAAS,IACT9B,KAAM,aAET,KACO,IACJA,KAAM,WAIXG,EAAIQ,UAAUP,EAAMqB,EAAOpB,GAE9BsB,EAAIhC,OACA1E,OAASuG,IACT1B,QAAU,IAAIiC,YACJP,KAGTG,EAAI/B,MACLG,OAASyB,EAERG,EAAI9B,WACL5E,OAAS+G,EAAOL,EAAItE,KAAMsE,KAC1B7B,QAAU,IAAIiC,YACJJ,EAAI1G,aAIZgH,EAAQT,EAAMjC,KAChBtE,OAAS4B,EAAI5B,SACbiH,OAASrF,EAAIqF,SAIhBP,EAAI/B,KAAO+B,EAAI9B,UAAY8B,EAAI5B,UACxB4B,EAAI5B,OAAQR,KAGlBkB,KAAKkB,QAEFtB,QACEqB,YAGRP,EAAId,IAAM9D,EAAOsE,OAAOC,OAASK,EAAIO,OAG1CS,EAAY,SAAClH,OACTkF,EAAMlF,EAAO2G,cACZrD,EAASV,OAAOsC,EAAK,mBAClBkB,EAAMlB,EAAIW,OACZG,SAAGC,SAAGF,SAAMoB,SACZhB,GAAK,EACL7B,EAAO,GACPiC,EAAO,GACPa,EAAM,GACNC,KACAJ,KACAK,GAAM,EACNC,GAAM,EACNC,GAAO,EAEJrB,IAAMC,KACFJ,IACHd,EAAImB,WAAWF,KACfjB,EAAIoB,OAAOH,GAEJ,KAANH,GAAoB,KAANA,GAAwB,KAATD,EAGzBwB,GAAa,MAANvB,GAAuB,MAATD,GAAyC,MAAxBb,EAAImB,WAAWF,EAAE,OACrDmB,GAAM,MAHNC,EAKPD,KAASC,GAAW,KAAJvB,GAAYG,IAAIC,IAEN,SADpBgB,EAAIT,QACFN,WAAW,MACR,EAEFmB,KACGL,EAAOC,SACR,KAGAD,GAAM3B,KAAK4B,KAEhB,IAEDE,OACErB,GAENjC,EAAOyD,KAAKxB,OACN3B,EAAKqC,SACAc,KAAKnD,KAAU2C,EAAO3C,KAAQ+C,EAAO/C,IAAQ,KAClD,IAGNiD,OAAgBtB,GAEhBqB,OAAgBrB,iBAIbM,EAAKI,YACPU,SACEJ,MAKdD,EAAU,SAAClB,EAAKxB,OACd1C,EAAMsF,EAAUpB,EAAIa,YACnB,IAAIrG,KAAOsB,EAAI0C,KACfhD,EAAOoG,OAAOpH,KAAOgE,EAAKhE,IAAO,UAE/BsB,GAGLoD,EAAa,SAACP,UACTjB,EAAYZ,OAAO+E,KAAKC,UAAUnD,GAAM,eACvCoD,EAAUpD,EAAIoC,OAAYjD,aAAmBa,EAAIzE,OAAS,IAAMyE,EAAIzE,WAEpE,IAAIM,KAAOmE,EAAIwC,WACXxC,EAAIoC,QAAkB,WAARvG,OAEdwE,EAAS,IACTL,EAAIwC,OAAO3G,GAAKuF,WACP,IAAMpB,EAAIwC,OAAO3G,GAAKwH,KAAK,KAAK,OAEhClE,MAAUtD,MAAOuH,EAAY/C,SAEvC+C,KAITf,wBACUiB,kBACH5D,SAAW4D,EAAO5D,cAClBI,OAAS,UACTD,UACW9C,oDAIVG,EAAOH,YACN2B,EAAQP,OAAOjB,EAAKwC,SAAU,kBAC1B,IAAI6D,SAAStE,EAAMQ,EAAavC,yBAKlCmF,aCpSH,SAACmB,GAEP3G,EAAO4G,OAASC,SAAWA,QAAQC,aAC3BA,IAAIH,cAKF,SAACI,EAAMC,EAAM9H,MACvBc,EAAO4G,QAAUlH,EAAKC,MAAMqH,EAAM9H,SAC5B,IAAI+H,UAAUF,EAAO,2BAA6B7H,EAAO,mCCZjEgI,EAAU,IAAIxG,EACdyG,EAAO,aAETC,MACH,IAAI,IAAI,IAAI,IAAI,KAAKlE,QAAQ,SAASmE,OAC7BC,EAAOD,EAAGtC,WAAW,KACrBuC,GAAS,KAAKA,EAAK,gBAGd,SAACN,UACLE,EAAQ5F,OAAO0F,EAAM,kBACjBG,EAAKhB,KAAKa,GAAQA,EAAKpI,QAAQuI,EAAM,SAASE,UAC1CD,EAAMC,EAAGtC,WAAW,KAAQsC,IAClCL,qCCZC,SAACA,EAAMxH,KACb+H,UAAU,iBAAkBP,EAAM,cAElC1G,gBACGd,QACF,IACKwH,EAAKpI,QAAQ,gBAAiB,SAASC,UAClCA,EAAK2I,OAAO,EAAE,GAAGC,cAAgB5I,EAAK2I,OAAO,qBAIlDR,EAAKS,qBAERnH,GAAO0G,kCCbL,SAACA,YACNO,UAAU,gBAAiBP,EAAM,UAE9BU,OAAOrI,UAAUgG,KAAK9F,KAAKyH,oCCHxB,SAACA,YACPO,UAAU,iBAAkBP,EAAM,UAE/BA,EAAK/H,kDCLC,SAAC+H,OAAMW,yDAAO,eACpB,IAAWX,GAAQ,OAASA,EAAOW,EAAOX,kCCCxC,SAACA,OAAMY,yDAAY,aACxBL,UAAU,gBAAiBP,EAAM,SAE9BA,EAAKR,KAAKoB,mCCLR,SAACZ,OACNa,EAAOb,GAAQA,EAAKzC,WACnBsD,GAAwB,qBAATA,gBAAAA,IAAoB,GAC7B,MACF,IAAI7I,KAAOgI,aAIba,GAAQ,qCCNH,SAACb,EAAMc,EAAOC,YACtBR,UAAU,mBAAoBP,EAAM,UAEjCA,EAAKpI,QAAQkJ,EAAOC,iCCHpB,SAACf,OAAMgB,yDAAQ,EAClB1H,SACA2H,EAAQvI,EAAKC,MAAMqH,EAAM,eACvBtH,EAAKC,MAAMqH,EAAM,UAAYiB,GAASvI,EAAKC,MAAMqH,EAAM,kBAClD1G,KAEP,SAAW0H,KACPC,MACK,IAAIjJ,KAAOgI,IACNA,EAAKhI,UAITgI,EAAMA,EAAKzC,OAAO,UAItByC,EAAKgB,UAER1H,sCCnBM,SAAC0G,OAAMzC,yDAAO,IAAKT,yDAAI,eAChCyD,UAAU,oBAAqBP,EAAM,UAElCA,EAAKzC,OAASA,EAASyC,EAAKQ,OAAO,EAAGjD,GAAUT,EAAMkD,0BCE3DnF,EAAU,IAAInB,YAEJ,SAAChC,OAAQ+H,4DACftH,EAAQO,EAAKC,MAAMjB,SAErB,WAAaS,IACJT,EAEJ,WAAaS,MACX+B,SAAWxC,IACXmE,SAAW4C,EAAO/G,MAEtBmE,SAAW4D,EAAO5D,SAASwC,OAC3BxD,EAAQP,OAAOmF,EAAO5D,SAAU,kBAC5B,IAAI2C,EAASiB,GAAQyB,QAAQC,KAAKxC,kCCnBlC,SAACyC,EAASpB,EAAMP,UACpBlD,EAAQ6E,EAAS3B,GAAQO,+BCG9BqB,EAAQ,SAACD,EAASpB,EAAMP,UACnB6B,EAAOF,EAASpB,EAAMP,MAG3B6B,OAASA,IACT/E,QAAUA,IACVgF,OAASvI,IACTwI,OAAS7C,IACTjF,MAAQT,YAEGoI"}